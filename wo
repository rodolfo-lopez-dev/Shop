# STEP 1: Monthly Focus Summary (same as your original)
monthly_focus = []

for month_name, (start_date, end_date) in month_windows.items():
    df_completed = df[
        df['Done'].notna() &
        (df['Done'] >= start_date) &
        (df['Done'] <= end_date)
    ]

    completed_on_time = df_completed[
        (df_completed['First_In_Progress'] >= start_date) &
        (df_completed['First_In_Progress'] <= end_date)
    ]['Story Points'].sum()

    completed_carryover = df_completed[
        df_completed['First_In_Progress'] < start_date
    ]['Story Points'].sum()

    monthly_focus.append({
        'Month': month_name,
        'Completed_OnTime': completed_on_time,
        'Completed_Carryover': completed_carryover
    })

# STEP 2: Convert to DataFrame and fix categorical order
focus_df = pd.DataFrame(monthly_focus)
focus_df['Month'] = pd.Categorical(focus_df['Month'], categories=['Apr', 'May', 'Jun'], ordered=True)
focus_df = focus_df.sort_values('Month')  # Ensures correct order for plotting

# Add Total and Average
focus_df['Total_Completed'] = focus_df['Completed_OnTime'] + focus_df['Completed_Carryover']
avg_completed = focus_df['Total_Completed'].mean()

# Plot stacked bars
ax = focus_df.plot(
    kind='bar',
    x='Month',
    y=['Completed_OnTime', 'Completed_Carryover'],
    stacked=True,
    color=['navy', 'silver'],
    edgecolor='black',
    figsize=(10, 6),
    title='PI 25.1 Completed Story Points â€“ On-Time vs Carryover'
)

# Add % Carryover label above bars
for idx, row in focus_df.iterrows():
    total = row['Completed_OnTime'] + row['Completed_Carryover']
    if total > 0:
        pct = row['Completed_Carryover'] / total * 100
        ax.text(idx, total + 1, f'{pct:.0f}%', ha='center', fontsize=9, color='gray')

# Add story point labels inside each block
for idx, row in focus_df.iterrows():
    if row['Completed_OnTime'] > 0:
        ax.text(idx, row['Completed_OnTime'] / 2, f"{int(row['Completed_OnTime'])}", ha='center', va='center', color='white', fontsize=10)
    if row['Completed_Carryover'] > 0:
        ax.text(idx, row['Completed_OnTime'] + (row['Completed_Carryover'] / 2), f"{int(row['Completed_Carryover'])}", ha='center', va='center', color='black', fontsize=10)

# Add average horizontal line
ax.axhline(avg_completed, color='darkgreen', linestyle='--', linewidth=2,
           label=f'Avg Completed SP: {avg_completed:.1f}')

# Final formatting
plt.ylabel('Story Points')
plt.xlabel('Month')
plt.xticks(rotation=0, fontsize=11)
plt.yticks(fontsize=11)
plt.legend()
plt.tight_layout()
plt.show()
